{"version":3,"file":"index.mjs","sources":["../lib/from_entries.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayArray = require( '@stdlib/assert-is-array-array' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Creates an object from an array of key-value pairs.\n*\n* @param {ArrayArray} entries - input object\n* @throws {TypeError} must provide an array of arrays\n* @returns {Object} object created from `[key, value]` pairs\n*\n* @example\n* var entries = [ ['beep', 'boop'], ['foo', 'bar'] ];\n*\n* var obj = objectFromEntries( entries );\n* // returns {'beep': 'boop', 'foo': 'bar'}\n*/\nfunction objectFromEntries( entries ) {\n\tvar out;\n\tvar i;\n\tif ( !isArrayArray( entries ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array of arrays. Value: `%s`.', entries ) );\n\t}\n\tout = {};\n\tfor ( i = 0; i < entries.length; i++ ) {\n\t\tout[ entries[i][0] ] = entries[ i ][ 1 ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = objectFromEntries;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an object from key-value pairs.\n*\n* @module @stdlib/utils-from-entries\n*\n* @example\n* var objectFromEntries = require( '@stdlib/utils-from-entries' );\n*\n* var entries = [ ['beep', 'boop'], ['foo', 'bar'] ];\n*\n* var obj = objectFromEntries( entries );\n* // returns {'beep': 'boop', 'foo': 'bar'}\n*/\n\n// MODULES //\n\nvar objectFromEntries = require( './from_entries.js' );\n\n\n// EXPORTS //\n\nmodule.exports = objectFromEntries;\n"],"names":["isArrayArray","require$$0","format","require$$1","lib","entries","out","i","TypeError","length"],"mappings":";;0KAsBA,IAAIA,EAAeC,EACfC,EAASC,EAkCb,IChBAC,EDAA,SAA4BC,GAC3B,IAAIC,EACAC,EACJ,IAAMP,EAAcK,GACnB,MAAM,IAAIG,UAAWN,EAAQ,kEAAmEG,IAGjG,IADAC,EAAM,GACAC,EAAI,EAAGA,EAAIF,EAAQI,OAAQF,IAChCD,EAAKD,EAAQE,GAAG,IAAOF,EAASE,GAAK,GAEtC,OAAOD"}