// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");var t=Object.prototype.toString;var n=Object.prototype.hasOwnProperty;var o="function"==typeof Symbol?Symbol.toStringTag:"";var e=r&&"symbol"==typeof Symbol.toStringTag?function(r){var e,a,l,u,i;if(null==r)return t.call(r);a=r[o],i=o,e=null!=(u=r)&&n.call(u,i);try{r[o]=void 0}catch(n){return t.call(r)}return l=t.call(r),e?r[o]=a:delete r[o],l}:function(r){return t.call(r)};var a=Array.isArray?Array.isArray:function(r){return"[object Array]"===e(r)};var l=function(r){if("function"!=typeof r)throw new TypeError("invalid argument. Must provide a function. Value: `"+r+"`.");return function(t){var n,o;if(!a(t))return!1;if(0===(n=t.length))return!1;for(o=0;o<n;o++)if(!1===r(t[o]))return!1;return!0}}(a);function u(r){var t,n;if(!l(r))throw new TypeError(function(){var r,t=arguments,n="https://stdlib.io/e/"+t[0]+"?";for(r=1;r<t.length;r++)n+="&arg[]="+encodeURIComponent(t[r]);return n}("0jsBx",r));for(t={},n=0;n<r.length;n++)t[r[n][0]]=r[n][1];return t}export{u as default};
//# sourceMappingURL=mod.js.map
